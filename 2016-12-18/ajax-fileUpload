之前虽然遇到过上传图片，但是是直接用form做的，把enctype设为multipart/form-data，就可以了

用html5的formdata

示例

用jquery ajax

var formData = new FormData();
formData.append('file', input.files[0]);

$.ajax({
	url: './testFileUpload',
	method: 'POST',
	data: formData,
	// 告诉jQuery不要去处理发送的数据，如果不设置，试了在Nodejs输出post的内容，为乱码
	contentType : false,
 	// 告诉jQuery不要去设置Content-Type请求头，如果不设置，jquery报错，Illegal invocation，
 	// 因为传的data为对象而不是值，所以报了错
	processData : false,
	success: function (data) {
		console.log(data);
	}
});


用fetch

fetch('./testFileUpload', {
	method: 'POST',
	body: formData,
}).then(function (data) {
	return data.text()
}).then(function (data) {
	console.log(data);
});



ajax 监听文件上传进度

$.ajax({
	url: './testFileUpload',
	method: 'POST',
	data: formData,
	contentType : false,
	processData : false,
	success: function (data) {
		console.log(data);
	}
});

添加 xhr 属性，返回XMLHttpRequest对象，用到其的upload属性

第一种写法

xhr: function () {
	var xhr = new XMLHttpRequest();
	
	xhr.upload.addEventListener("progress", function(evt) {
		var percentComplete = evt.loaded / evt.total;
		percentComplete = parseInt(percentComplete * 100);
		console.log(percentComplete);
	});
	
	return xhr;
}

第二种写法

xhr: xhrOnProgress(function(e){
	var percent=e.loaded / e.total;//计算百分比
	console.log(percent);
})


var xhrOnProgress = function(fun) {
	xhrOnProgress.onprogress = fun; //绑定监听
	//使用闭包实现监听
	return function() {
		var xhr = new XMLHttpRequest();
		//判断监听函数是否为函数
		if (typeof xhrOnProgress.onprogress !== 'function') {
			return xhr;
		}
		//如果有监听函数并且xhr对象支持绑定时就把监听函数绑定上去
		if (xhrOnProgress.onprogress && xhr.upload) {
			xhr.upload.onprogress = xhrOnProgress.onprogress;
		}
		return xhr;
	}
}

fetch 无法监听文件上传进度，且无法终端，觉得功能还是太单一

将XMLHttpRequest打包

function futch(url, opts = {}, onProgress) {
	return new Promise( (res, rej) => {
		var xhr = new XMLHttpRequest();
		xhr.open(opts.method || 'get', url);
		for (var k in opts.headers|| {}) {
			xhr.setRequestHeader(k, opts.headers[k])
		}
		xhr.onload = e => res(e.target.responseText);
		xhr.onerror = rej;
		if (xhr.upload && onProgress) {
			xhr.upload.onprogress = onProgress;
		}
		xhr.send(opts.body);
	});
};


futch('./testFileUpload', {
	method: 'POST',
	body: formData
}, function (event) {
	var percentComplete = event.loaded / event.total;
	percentComplete = parseInt(percentComplete * 100);
	console.log(percentComplete);
}).then(console.log)
